demo();
install.packages("~/Downloads/foreign_0.8-66.tar", repos = NULL)
install.packages("foreign")
install.packages("~/Downloads/foreign_0.8-66.tar", repos = NULL)
install.packages("~/Downloads/foreign_0.8-66.tar")
library("foreign", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
mydata <- read.dta("~/Downloads/mortality.dta")
mort <- read.dta("~/Downloads/mortality.dta")
4^4
joanne <- "lief"
View(mort)
lief <- "Joanne"
dumky <- lief
dumky
dumky <- "lief"
dumky
ls(mort)
mort$CANCER
cancer <- mort$CANCER
mean(mort$AGE)
plot(mort$CANCER, mort$AGE)
cancer <- mort$CANCER==1
cancer
cancer <- which(mort$CANCER==1)
cancer
cancer <- subset(mort, CANCER==1)
cancer
mean(cancer$AGE)
agecount <- rle(sort(cancer$AGE))
agecount
plot(agecount$values, agecount$lengths)
barplot(agecount$values, agecount$lengths)
barplot(agecount$lengths)
barplot(agecount$lengths, names.arg=(agecount$values))
mort <- read.dta("~/Downloads/mortality.dta")
library("foreign", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
mort <- read.dta("~/Downloads/mortality.dta")
summary(mort)
summary(mort$CANCER)
getwd()
attributes(mort)
names(mort)
trees
tree <- read.csv("~/Downloads/trees91.csv", header = TRUE, sep = ",")
summary(tree)
names(tree)
summary(tree$CHBR)
summary(tree$C)
tree$C <- factor(tree$C)
summary(tree$C)
dnorm(0)
dnorm(mort$AGE)
summary(mort$AGE)
meanage <- mean(mort$AGE)
x <- seq(meanage-15, meanage+15, by=1)
y <- dnorm(mort$AGE,mean = meanage)
plot(x,y)
x <- factor(mort$AGE)
x
qqline(mort$AGE)
plot.new()
qqline(mort$AGE)
plot(qqline(mort$AGE))
plot.new(qqline(mort$AGE))
qqnorm(mort$AGE)
qqline(mort$AGE)
plot(density(mort$AGE))
plot(dnorm(mort$AGE))
plot(qnorm(mort$AGE))
plot(dnorm(mort$AGE))
age <- factor(mort$AGE)
plot(dnorm(age))
hist(mort$AGE)
hist(mort$AGE, breaks=1, col="red")
hist(mort$AGE, breaks=15, col="red")
hist(mort$AGE, breaks=10, col="red")
hist(mort$AGE, breaks=10, col="red")
hist(mort$AGE, breaks=5, col="red")
hist(mort$AGE, col="red")
plot(density(mort$AGE, col="red"))
plot(density(mort$AGE, col="red"), col="red")
cancer <- mort[mort$CANCER = 1]
cancer <- mort[mort$CANCER = 1,]
cancer <- mort[mort$CANCER == 1,]
circ <- mort[mort$CIRCULAR == 1]
circ <- mort[mort$CIRCULAR == 1,]
resp <- mort[mort$RESPIRATORY == 1,]
for (i in 7:10) {
d <- density(mort[,i])
plot(d)
polygon(d, col="red")
}
par(mfrow=c(3,3))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
d <- density(mort[,i])
plot(d)
polygon(d, col="red")
}
par(mfrow=c(3,3))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
d <- density(mort[,i])
plot(d, type = "n", main = colnames[i])
polygon(d, col="red")
}
par(mfrow=c(3,3))
colnames <- dimnames(mort)[[1]]
for (i in 7:10) {
d <- density(mort[,i])
plot(d, type = "n", main = colnames[i])
polygon(d, col="red")
}
colnames <- dimnames(mort)[[2]]
par(mfrow=c(3,3))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
d <- density(mort[,i])
plot(d, type = "n", main = colnames[i])
polygon(d, col="red")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
hist(mort[,i], main = colnames[i])
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[i] == 1,]
hist(bycause$AGE, main = colnames[i])
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i])
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], break = seq(60,80,1))
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], breaks = seq(60, 80, 1), col = "red", border = 0
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], breaks = seq(60, 80, 1), col = "red")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], breaks = seq(min(bycause$AGE), max(bycause$AGE), 2), col = "red")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "red")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", lty = "blank")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,60), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", lty = "blank")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,100), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", lty = "blank")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", lty = "blank")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
axis(1, tick=FALSE, col.axis="white")
axis(2, tick=FALSE, col.axis="white")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
axis(1, tick=FALSE, col.axis="gray")
axis(2, tick=FALSE, col.axis="gray")
}
par(mfrow=c(2,2), oma=c(0,0,0,0), xpd=FALSE, xaxs="r", yaxs="i", mgp=c(2.8,0.3,0.5), col.lab="white", col.axis="white", col.main="white", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=1, tck=0, las=1)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
axis(1, tick=FALSE, col.axis="gray")
axis(2, tick=FALSE, col.axis="gray")
}
par(mfrow=c(2,2), col.lab="white", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=1, tck=0, las=1)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
axis(1, tick=FALSE, col.axis="gray")
axis(2, tick=FALSE, col.axis="gray")
}
par(mfrow=c(2,2), col.lab="white", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=1, tck=0, las=1)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=0, tck=0, las=0)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=1, tck=0, las=0)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=1, tck=0, las=1)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=0, tck=0, las=0)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=0, tck=0, las=0)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1, mort$DEATH == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=0, tck=0, las=0)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "red", border = F)
}
plot(density(mort$AGE, col="red"), col="red")
plot(density(mort$AGE, col="red"), col="pink")
dumky <- lief
dumky <- lief
lief <- joanne
dumky <- lief
lief <- "joanne"
dumky <- lief
dumky
lief <- c(2,4,8,16,32)
lief <- c(2,4,8,16,32)
hist(lief, breaks=seq(2010,2015,1), main = "hoe lief is Joanne?")
hist(lief, breaks=seq(2009,2015,1), main = "hoe lief is Joanne?")
hist(lief, main = "hoe lief is Joanne?")
plot(jaren, lief, main = "hoe lief is Joanne?")
jaren <- c(2010, 2011, 2012, 2013, 2014)
plot(jaren, lief, main = "hoe lief is Joanne?")
lief <- lief^2
plot(jaren, lief, main = "hoe lief is Joanne?")
plot(lines(jaren, lief, main = "hoe lief is Joanne?"))
lief <- lief^3
plot(lines(jaren, lief, main = "hoe lief is Joanne?"))
jaren <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016)
plot(lines(jaren, lief, main = "hoe lief is Joanne?"))
plot(lines(jaren, jaren^2, main = "hoe lief is Joanne?"))
jaren <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016)
plot(lines(jaren, jaren^2, main = "hoe lief is Joanne?"))
stroopdata <- read.csv("~/Dropbox/Documents/Study/Udacity NAND/Data Analyst P1/stroopdata.csv")
View(stroopdata)
install.packages(c("Hmisc", "MASS", "Matrix", "Rcpp", "boot", "class", "cluster", "covr", "curl", "devtools", "ggthemes", "git2r", "htmltools", "lintr", "lubridate", "mgcv", "nlme", "nnet", "sp", "spatial", "survival", "testthat"))
install.packages("tidyr")
library("tidyr")
library("tidyr")
occupation <- pla_data %>%
count(Occupation, sort = T) %>%
filter(Occupation %in% Occupation[1:20])
pl_data <- read.csv("prosperLoanData.csv")
setwd("~/Coding/webdev/dand_ps6_datavis/app/data")
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
pl_data <- read.csv("prosperLoanData.csv")
pl_data$ListingCreationDate <-  as.POSIXct(pl_data$ListingCreationDate)
pl_data$ClosedDate <- as.Date(pl_data$ClosedDate)
pl_data$DateCreditPulled <- as.Date(pl_data$DateCreditPulled)
pl_data$LoanOriginationDate <- as.Date(pl_data$LoanOriginationDate)
str(pl_data)
occupation <- pl_data %>%
count(Occupation, sort = T) %>%
filter(Occupation %in% Occupation[1:20])
ggplot(occupation) +
geom_bar(fill="blue") +
geom_text(stat="count", aes(label=..count..), size=2, colour="white", hjust=1.1, fontface="bold") +
scale_x_discrete(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
coord_flip() +
theme(axis.title = element_blank()) +
ggtitle("Type of incident (count)")
ggplot(occupation, aes(x=..count..)) +
geom_bar(fill="blue") +
geom_text(stat="count", aes(label=..count..), size=2, colour="white", hjust=1.1, fontface="bold") +
scale_x_discrete(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
coord_flip() +
theme(axis.title = element_blank()) +
ggtitle("Type of incident (count)")
View(occupation)
ggplot(occupation, aes(x=n)) +
geom_bar(fill="blue") +
geom_text(stat="count", aes(label=..count..), size=2, colour="white", hjust=1.1, fontface="bold") +
scale_x_discrete(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
coord_flip() +
theme(axis.title = element_blank()) +
ggtitle("Type of incident (count)")
View(occupation)
ggplot(occupation, aes(y=n)) +
geom_bar(fill="blue") +
geom_text(stat="count", aes(label=..count..), size=2, colour="white", hjust=1.1, fontface="bold") +
scale_x_discrete(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
coord_flip() +
theme(axis.title = element_blank()) +
ggtitle("Type of incident (count)")
```
ggplot(occupation, aes(y=n)) +
geom_bar(fill="blue") +
geom_text(stat="count", aes(label=..count..), size=2, colour="white", hjust=1.1, fontface="bold") +
scale_x_discrete(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
coord_flip() +
theme(axis.title = element_blank()) +
ggtitle("Type of incident (count)")
ggplot(occupation, aes(y=n)) +
geom_bar(fill="blue") +
geom_text(aes(label=..count..), size=2, colour="white", hjust=1.1, fontface="bold") +
scale_x_discrete(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
coord_flip() +
theme(axis.title = element_blank()) +
ggtitle("Type of incident (count)")
ggplot(occupation, aes()) +
geom_bar(fill="blue") +
geom_text(aes(label=..count..), size=2, colour="white", hjust=1.1, fontface="bold") +
scale_x_discrete(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
coord_flip() +
theme(axis.title = element_blank()) +
ggtitle("Type of incident (count)")
ggplot(occupation, aes(y=n)) +
geom_bar(fill="blue")
ggplot(occupation, aes(Occupation)) +
geom_bar(fill="blue")
ggplot(occupation, aes(Occupation, n)) +
geom_bar(fill="blue")
ggplot(pl_data$Occupation, aes(Occupation)) +
geom_bar(fill="blue")
ggplot(pl_data, aes(Occupation)) +
geom_bar(fill="blue")
ggplot(pl_data, aes(Occupation[1:20])) +
geom_bar(fill="blue")
ggplot(occupation, aes(Occupation)) +
geom_bar(fill="blue")
ggplot(occupation, aes(Occupation, n)) +
geom_bar(fill="blue", stat = "identity")
ggplot(occupation, aes(Occupation, n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[Occupation]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[n]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(n)[n]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[Occupation]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[-Occupation]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[Occupation]), -n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[Occupation]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[Occupation]), n)) +
geom_bar(fill="blue", stat = "identity", aes(n)) +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[Occupation]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(pl_data, aes(EmploymentStatus)) +
geom_bar(fill="blue", stat = "count") +
coord_flip()
ggplot(pl_data, aes(CreditGrade)) +
geom_bar(fill="blue", stat = "count") +
coord_flip()
ggplot(pl_data, aes(LoanStatus)) +
geom_bar(fill="blue", stat = "count") +
coord_flip()
ggplot(pl_data, aes(DebtToIncomeRatio)) +
geom_bar(fill="blue", stat = "count") +
coord_flip()
ggplot(pl_data, aes(DebtToIncomeRatio)) +
geom_histogram(fill="blue") +
coord_flip()
ggplot(pl_data, aes(DebtToIncomeRatio)) +
geom_histogram(fill="blue", bins = 10) +
```
ggplot(pl_data, aes(DebtToIncomeRatio)) +
geom_histogram(fill="blue", bins = 10)
ggplot(pl_data, aes(DebtToIncomeRatio)) +
geom_histogram(fill="blue", bins = .2)
ggplot(pl_data, aes(DebtToIncomeRatio)) +
geom_histogram(fill="blue", bins = 1)
ggplot(pl_data, aes(DebtToIncomeRatio)) +
geom_histogram(fill="blue", bins = 20)
ggplot(pl_data, aes(DebtToIncomeRatio)) +
geom_histogram(fill="blue", bins = 50)
ggplot(pl_data, aes(DebtToIncomeRatio)) +
geom_histogram(fill="blue", bins = 100)
