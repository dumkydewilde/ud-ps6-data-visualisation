colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i])
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], break = seq(60,80,1))
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], breaks = seq(60, 80, 1), col = "red", border = 0
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], breaks = seq(60, 80, 1), col = "red")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], breaks = seq(min(bycause$AGE), max(bycause$AGE), 2), col = "red")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "red")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", lty = "blank")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,60), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", lty = "blank")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,100), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", lty = "blank")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", lty = "blank")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
axis(1, tick=FALSE, col.axis="white")
axis(2, tick=FALSE, col.axis="white")
}
par(mfrow=c(2,2))
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
axis(1, tick=FALSE, col.axis="gray")
axis(2, tick=FALSE, col.axis="gray")
}
par(mfrow=c(2,2), oma=c(0,0,0,0), xpd=FALSE, xaxs="r", yaxs="i", mgp=c(2.8,0.3,0.5), col.lab="white", col.axis="white", col.main="white", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=1, tck=0, las=1)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
axis(1, tick=FALSE, col.axis="gray")
axis(2, tick=FALSE, col.axis="gray")
}
par(mfrow=c(2,2), col.lab="white", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=1, tck=0, las=1)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
axis(1, tick=FALSE, col.axis="gray")
axis(2, tick=FALSE, col.axis="gray")
}
par(mfrow=c(2,2), col.lab="white", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=1, tck=0, las=1)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=0, tck=0, las=0)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=1, tck=0, las=0)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=1, tck=0, las=1)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=0, tck=0, las=0)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=0, tck=0, las=0)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1, mort$DEATH == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "gray", border = F)
}
par(mfrow=c(2,2), col.lab="gray", col.axis="gray", col.main="gray", font.main=1, cex.main=0.8, cex.axis=0.8, cex.lab=0.8, family="Helvetica", lend=0, tck=0, las=0)
colnames <- dimnames(mort)[[2]]
for (i in 7:10) {
bycause <- mort[mort[i] == 1,]
hist(bycause$AGE, main = colnames[i], ylim = c(0,70), breaks = seq(min(bycause$AGE), max(bycause$AGE), 1), col = "red", border = F)
}
plot(density(mort$AGE, col="red"), col="red")
plot(density(mort$AGE, col="red"), col="pink")
dumky <- lief
dumky <- lief
lief <- joanne
dumky <- lief
lief <- "joanne"
dumky <- lief
dumky
lief <- c(2,4,8,16,32)
lief <- c(2,4,8,16,32)
hist(lief, breaks=seq(2010,2015,1), main = "hoe lief is Joanne?")
hist(lief, breaks=seq(2009,2015,1), main = "hoe lief is Joanne?")
hist(lief, main = "hoe lief is Joanne?")
plot(jaren, lief, main = "hoe lief is Joanne?")
jaren <- c(2010, 2011, 2012, 2013, 2014)
plot(jaren, lief, main = "hoe lief is Joanne?")
lief <- lief^2
plot(jaren, lief, main = "hoe lief is Joanne?")
plot(lines(jaren, lief, main = "hoe lief is Joanne?"))
lief <- lief^3
plot(lines(jaren, lief, main = "hoe lief is Joanne?"))
jaren <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016)
plot(lines(jaren, lief, main = "hoe lief is Joanne?"))
plot(lines(jaren, jaren^2, main = "hoe lief is Joanne?"))
jaren <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016)
plot(lines(jaren, jaren^2, main = "hoe lief is Joanne?"))
stroopdata <- read.csv("~/Dropbox/Documents/Study/Udacity NAND/Data Analyst P1/stroopdata.csv")
View(stroopdata)
install.packages(c("Hmisc", "MASS", "Matrix", "Rcpp", "boot", "class", "cluster", "covr", "curl", "devtools", "ggthemes", "git2r", "htmltools", "lintr", "lubridate", "mgcv", "nlme", "nnet", "sp", "spatial", "survival", "testthat"))
setwd("~/Coding/webdev/dand_ps6_datavis/app/data")
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
```
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Coding/webdev/dand_ps6_datavis/app/data")
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
# Chunk 2
pl_data <- read.csv("prosperLoanData.csv")
pl_data$ListingCreationDate <-  as.POSIXct(pl_data$ListingCreationDate)
pl_data$ClosedDate <- as.Date(pl_data$ClosedDate)
pl_data$DateCreditPulled <- as.Date(pl_data$DateCreditPulled)
pl_data$LoanOriginationDate <- as.Date(pl_data$LoanOriginationDate)
str(pl_data)
#interesting: occupation, employment status, credit grade, loan status, BorrowerAPR,
#DebtToIncomeRatio
# Chunk 3
occupation <- pl_data %>%
count(Occupation, sort = T) %>%
filter(Occupation %in% Occupation[1:20])
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[Occupation]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
# Chunk 4
ggplot(pl_data, aes(EmploymentStatus)) +
geom_bar(fill="blue", stat = "count") +
coord_flip()
ggplot(pl_data, aes(DebtToIncomeRatio)) +
geom_histogram(fill="blue", bins = 100)
dbt_to_income <- pl_data %>%
filter(DebtToIncomeRatio > 8)
print(dbt_to_income)
View(dbt_to_income)
dbt_to_income <- pl_data %>%
filter(DebtToIncomeRatio > 10)
print(dbt_to_income)
str(dbt_to_income)
occupation <- pl_data %>%
count(Occupation, sort = T) %>%
filter(Occupation %in% Occupation[1:20])
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[Occupation]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[Occupation]))) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(Occupation)[n]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, table(n)[n]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(n, table(n)[n]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(n, table(Occupation)[n]), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(Occupation, n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(Occupation, reorder(n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(Occupation, reorder(n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(Occupation, reorder(n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
coord_flip()
ggplot(occupation, aes(Occupation, reorder(n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(Occupation, reorder(n))) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(Occupation, reorder(n))) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, n), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
occupation <- pl_data %>%
count(Occupation, sort = T) %>%
filter(Occupation %in% Occupation[1:30])
ggplot(occupation, aes(reorder(Occupation, n), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
occupation <- pl_data %>%
group_by(EmploymentStatus)
count(Occupation, sort = T) %>%
filter(Occupation %in% Occupation[1:30])
ggplot(occupation, aes(reorder(Occupation, n), n)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
occupation <- pl_data %>%
group_by(EmploymentStatus, Occupation) %>%
summarise(n = n())
occupation <- pl_data %>%
group_by(Occupation, EmploymentStatus) %>%
summarise(n = n())
ggplot(occupation, aes(reorder(Occupation, n), n, fill=EmploymentStatus)) +
geom_bar(fill="blue", stat = "identity") +
coord_flip()
ggplot(occupation, aes(reorder(Occupation, n), n, fill=EmploymentStatus)) +
geom_bar(stat = "identity") +
coord_flip()
occupation <- pl_data %>%
group_by(Occupation, EmploymentStatus) %>%
summarise(n = n()) %>%
filter(Occupation != "")
ggplot(occupation, aes(reorder(Occupation, n), n, fill=EmploymentStatus)) +
geom_bar(stat = "identity") +
coord_flip()
occupation <- pl_data %>%
group_by(Occupation, EmploymentStatus) %>%
summarise(n = n()) %>%
filter(Occupation != "" && Occupation != "Other") %>%
filter(n > 10)
ggplot(occupation, aes(reorder(Occupation, n), n, fill=EmploymentStatus)) +
geom_bar(stat = "identity") +
coord_flip()
grade_status <- pl_data %>%
group_by(LoanStatus, CreditGrade) %>%
summarise(n = n())
ggplot(grade_status, aes(reorder(Occupation, n), n, fill=EmploymentStatus)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(grade_status, aes(reorder(LoanStatus, n), n, fill=CreditGrade)) +
geom_bar(stat = "identity") +
coord_flip()
grade_status <- pl_data %>%
group_by(LoanStatus, CreditGrade) %>%
summarise(n = n()) %>%
filter(CreditGrade != "")
ggplot(grade_status, aes(reorder(LoanStatus, n), n, fill=CreditGrade)) +
geom_bar(stat = "identity") +
coord_flip()
grade_status <- pl_data %>%
group_by(LoanStatus, CreditGrade) %>%
summarise(n = n()) %>%
filter(CreditGrade != "" && LoanStatus != "")
ggplot(grade_status, aes(reorder(LoanStatus, n), n, fill=CreditGrade)) +
geom_bar(stat = "identity") +
coord_flip()
grade_status <- pl_data %>%
group_by(LoanStatus, CreditGrade) %>%
summarise(n = n()) %>%
filter(CreditGrade != "")
ggplot(grade_status, aes(reorder(LoanStatus, n), n, fill=CreditGrade)) +
geom_bar(stat = "identity") +
coord_flip()
grade_status <- pl_data %>%
group_by(CreditGrade, LoanStatus) %>%
summarise(n = n()) %>%
filter(CreditGrade != "")
ggplot(grade_status, aes(reorder(CreditGrade, n), n, fill=LoanStatus)) +
geom_bar(stat = "identity") +
coord_flip()
grade_status <- pl_data %>%
group_by(CreditGrade, LoanStatus) %>%
summarise(n = n()) %>%
filter(CreditGrade != "")
ggplot(grade_status, aes(CreditGrade, n, fill=LoanStatus)) +
geom_bar(stat = "identity") +
coord_flip()
View(grade_status)
View(dbt_to_income)
View(occupation)
View(dbt_to_income)
nas <- pl_data %>%
filter(!complete.cases(.))
View(nas)
completes <- pl_data %>%
filter(complete.cases(.))
View(completes)
after_date <- pl_data %>%
filter(ListingCreationDate > as.Date("July 2009"))
after_date <- pl_data %>%
filter(ListingCreationDate > as.Date("01-07-2009"))
after_date <- pl_data %>%
filter(ListingCreationDate > "01-07-2009")
after_date <- pl_data %>%
filter(ListingCreationDate < "01-07-2009")
after_date <- pl_data %>%
filter(ListingCreationDate < "01-07-2010")
after_date <- pl_data %>%
filter(ListingCreationDate < "01-07-2014")
after_date <- pl_data %>%
filter(ListingCreationDate < "2009-07-01")
after_date <- pl_data %>%
filter(ListingCreationDate > "2009-07-01")
export_data <- pl_data %>%
select(var_for_export)
var_for_export = c("ListingNumber", "ListingCreationDate", "ProsperRating..Alpha." , "BorrowerRate", "ListingCategory", "Occupation" , "EmploymentStatus" , "EmploymentStatusDuration" , "IsBorrowerHomeowner")
export_data <- pl_data %>%
select(var_for_export)
export_data <- pl_data %>%
select_(var_for_export)
filter(ListingCreationDate > "2009-07-01")
View(export_data)
export_data <- pl_data %>%
select_(.dots = var_for_export)
View(pl_data)
var_for_export = c("ListingNumber", "ListingCreationDate", "ProsperRating..Alpha." , "BorrowerRate", "ListingCategory..numeric.", "Occupation" , "EmploymentStatus" , "EmploymentStatusDuration" , "IsBorrowerHomeowner")
export_data <- pl_data %>%
select_(.dots = var_for_export)
filter(ListingCreationDate > "2009-07-01")
View(export_data)
export_data <- pl_data %>%
filter(ListingCreationDate > "2009-07-01")
select_(.dots = var_for_export)
export_data <- pl_data %>%
select_(.dots = var_for_export) %>%
filter(ListingCreationDate > "2009-07-01")
View(export_data)
str(export_data$ListingNumber)
str(export_data$ListingCategory..numeric.)
export_data$ListingCategory..numeric. <- as.factor(export_data$ListingCategory..numeric.)
rm(export_data)
export_data <- pl_data %>%
select_(.dots = var_for_export) %>%
filter(ListingCreationDate > "2009-07-01")
listing_cats = c(0 : "Not Available", 1 : "Debt Consolidation", 2 : "Home Improvement", 3 : "Business", 4 : "Personal Loan", 5 : "Student Use", 6 : "Auto", 7: "Other", 8 : "Baby&Adoption", 9 : "Boat", 10 : "Cosmetic Procedure", 11 : "Engagement Ring", 12 : "Green Loans", 13 : "Household Expenses", 14 : "Large Purchases", 15 : "Medical/Dental", 16 : "Motorcycle", 17 : "RV", 18 : "Taxes", 19 : "Vacation", 20 : "Wedding Loans")
listing_cat_labels = c("Not Available", "Debt Consolidation", "Home Improvement", "Business", "Personal Loan", "Student Use", "Auto", "Other", "Baby&Adoption", "Boat",
"Cosmetic Procedure", "Engagement Ring", "Green Loans", "Household Expenses", "Large Purchases", "Medical/Dental", "Motorcycle", "RV", "Taxes",
"Vacation", "Wedding Loans")
export_data$ListingCategory..numeric. <- as.factor(export_data$ListingCategory..numeric., labels=listing_cat_labels)
export_data$ListingCategory..numeric. <- as.factor(export_data$ListingCategory..numeric., levels=range(0:20), labels=listing_cat_labels)
export_data$ListingCategory..numeric. <- as.factor(export_data$ListingCategory..numeric.)
str(export_data$ListingCategory..numeric.)
export_data$ListingCategory..numeric. <- as.factor(export_data$ListingCategory..numeric.,
labels=listing_cat_labels)
export_data$ListingCategory..numeric. <- as.factor(export_data$ListingCategory..numeric.,
levels=0:20,
labels=listing_cat_labels)
export_data$ListingCategory..numeric. <- factor(export_data$ListingCategory..numeric.,
levels=0:20,
labels=listing_cat_labels)
rm(export_data)
export_data <- pl_data %>%
select_(.dots = var_for_export) %>%
filter(ListingCreationDate > "2009-07-01")
export_data$ListingCategory..numeric. <- factor(export_data$ListingCategory..numeric.,
labels=listing_cat_labels)
export_data$ListingCategory..numeric. <- factor(export_data$ListingCategory..numeric.,
levels=0:20,
labels=listing_cat_labels)
rm(export_data)
export_data <- pl_data %>%
select_(.dots = var_for_export) %>%
filter(ListingCreationDate > "2009-07-01")
export_data$ListingCategory..numeric. <- factor(export_data$ListingCategory..numeric.,
levels=0:20,
labels=listing_cat_labels)
write.csv(export_data, file = "prosper_loan_data.csv")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Coding/webdev/dand_ps6_datavis/app/data")
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
# Chunk 2
pl_data <- read.csv("prosperLoanData.csv")
pl_data$ListingCreationDate <-  as.POSIXct(pl_data$ListingCreationDate)
pl_data$ClosedDate <- as.Date(pl_data$ClosedDate)
pl_data$DateCreditPulled <- as.Date(pl_data$DateCreditPulled)
pl_data$LoanOriginationDate <- as.Date(pl_data$LoanOriginationDate)
str(pl_data)
#interesting: occupation, employment status, credit grade, loan status, BorrowerAPR,
#DebtToIncomeRatio
# Chunk 3
employment <- pl_data %>%
group_by(Occupation, EmploymentStatus) %>%
summarise(n = n()) %>%
filter(Occupation != "" && Occupation != "Other") %>%
filter(n > 10)
ggplot(employment, aes(reorder(Occupation, n), n, fill=EmploymentStatus)) +
geom_bar(stat = "identity") +
coord_flip()
# Chunk 4
grade_status <- pl_data %>%
group_by(CreditGrade, LoanStatus) %>%
summarise(n = n()) %>%
filter(CreditGrade != "")
ggplot(grade_status, aes(CreditGrade, n, fill=LoanStatus)) +
geom_bar(stat = "identity") +
coord_flip()
# Chunk 5
var_for_export = c("ListingNumber", "ListingCreationDate", "ProsperRating..Alpha." , "BorrowerRate", "ListingCategory..numeric.", "Occupation" , "EmploymentStatus" , "EmploymentStatusDuration" , "IsBorrowerHomeowner")
export_data <- pl_data %>%
select_(.dots = var_for_export) %>%
filter(ListingCreationDate > "2009-07-01")
#change numeric category listings to actual categories
listing_cat_labels = c("Not Available", "Debt Consolidation", "Home Improvement", "Business", "Personal Loan", "Student Use", "Auto", "Other", "Baby&Adoption", "Boat",
"Cosmetic Procedure", "Engagement Ring", "Green Loans", "Household Expenses", "Large Purchases", "Medical/Dental", "Motorcycle", "RV", "Taxes",
"Vacation", "Wedding Loans")
export_data$ListingCategory..numeric. <- factor(export_data$ListingCategory..numeric.,
levels=0:20,
labels=listing_cat_labels)
View(export_data)
export_data <- pl_data %>%
filter(ListingCreationDate > "2009-07-01") %>%
select_(.dots = var_for_export)
export_data$ListingCategory..numeric. <- factor(export_data$ListingCategory..numeric.,
levels=0:20,
labels=listing_cat_labels)
export_data$ListingCategory <- factor(export_data$ListingCategory..numeric.,
levels=0:20,
labels=listing_cat_labels)
export_data$ListingCategory <- export_data$ListingCategory..numeric.
export_data <- export_data %>%
select(Occupation, EmploymentStatus, ListingCategory, ProsperRating..Alpha.) %>%
summarise(n = n())
export_data <- pl_data %>%
filter(ListingCreationDate > "2009-07-01") %>%
select_(.dots = var_for_export)
export_data$ListingCategory <- export_data$ListingCategory..numeric.
export_data$ListingCategory <- factor(export_data$ListingCategory,
levels=0:20,
labels=listing_cat_labels)
export_data <- export_data %>%
summarise(Occupation, EmploymentStatus, ListingCategory, ProsperRating..Alpha., n = n())
export_data <- export_data %>%
count(Occupation, EmploymentStatus, ListingCategory, ProsperRating..Alpha., n = n())
export_data <- pl_data %>%
filter(ListingCreationDate > "2009-07-01") %>%
select_(.dots = var_for_export)
export_data$ListingCategory <- export_data$ListingCategory..numeric.
export_data$ListingCategory <- factor(export_data$ListingCategory,
levels=0:20,
labels=listing_cat_labels)
export_data <- export_data %>%
count(Occupation, EmploymentStatus, ListingCategory, ProsperRating..Alpha.)
write.csv(export_data, file = "pldata.csv")
write.csv(export_data, file = "pldata.csv", row.names = F)
